import type { Metadata } from 'next';
import { Instrument_Sans, Inter, Roboto } from 'next/font/google';
import './globals.css';
import { NavBar } from '@/components/navbar/NavBar';
import GlobalContextProvider from '@/context/GlobalContextProvider';
import ErrorMessage from '@/components/errorMessage/ErrorMessage';
import Footer from '@/components/footer/Footer';
import { cookies } from 'next/headers';
import { API_URL } from '@/util/config';
import { fetchAPI } from '@/util/api';
import { User } from '@/util/definitions';

const instrumentSans = Instrument_Sans({
  variable: '--font-instrument-sans',
  subsets: ['latin'],
});
const inter = Inter({
  variable: '--font-inter',
  subsets: ['latin'],
});
const roboto = Roboto({
  variable: '--font-roboto',
  subsets: ['latin'],
});

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const cookieStore = await cookies();
  const response = await fetchAPI(`${API_URL}/me`, {
    method: 'GET',
    headers: {
      Cookie: cookieStore.toString(), // pass request cookies
    },
    cache: 'no-store', // optional: prevent caching
  });
  let user: User | null | undefined = undefined;
  let error: string = '';
  if (response.status === 'success') {
    user = {
      id: response.data._id,
      username: response.data.username,
      email: response.data.email,
      accountType: response.data.accountType,
    };
  } else if (response.status === 'fail') {
    user = null;
  } else {
    user = null;
    error = response.message;
  }

  return (
    <html lang="en">
      <body
        className={`${instrumentSans.variable} ${inter.variable} ${roboto.variable} antialiased w-[100vw] relative transition-colors duration-250 overflow-x-clip`}
      >
        <GlobalContextProvider initialUser={user} initialError={error}>
          <NavBar />
          {children}
          <Footer />
          <ErrorMessage />
        </GlobalContextProvider>
      </body>
    </html>
  );
}
